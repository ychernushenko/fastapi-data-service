name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  test-and-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          poetry install --with dev
      
      - name: Run tests
        run: |
          poetry run pytest

      - name: Generate API documentation with sphinx-apidoc
        run: |
          poetry run sphinx-apidoc -o docs/source app

      - name: Build Sphinx docs
        run: |
          cd docs
          poetry run sphinx-build -E -b html source _build/html
      
      - name: Deploy docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html

  build-and-tf-apply:
    needs: test-and-docs
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Docker build and push steps
      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ vars.GCP_PROJECT_ID }}/fastapi-service:latest .

      - name: Configure Docker to use Google Cloud credentials
        run: |
          gcloud auth configure-docker --quiet

      - name: Push Docker image to Google Container Registry
        run: |
          docker push gcr.io/${{ vars.GCP_PROJECT_ID }}/fastapi-service:latest

      # Terraform deployment steps
      - name: Initialize Terraform
        working-directory: ./terraform
        env:
          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GCP_SA_KEY }}
        run: terraform init
      
      - name: Apply Terraform (Deploy Infrastructure)
        working-directory: ./terraform
        env:
          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GCP_SA_KEY }}
        run: terraform apply -auto-approve \
            -var "project_id=${{ vars.GCP_PROJECT_ID }}" \
            -var "region=${{ vars.GCP_REGION }}"
