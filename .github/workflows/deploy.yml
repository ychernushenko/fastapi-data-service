name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |  
          poetry install

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Use setup job
        uses: ./.github/workflows/deploy.yml@setup
      
      - name: Run tests
        run: |
          poetry run pytest

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Use setup job
        uses: ./.github/workflows/deploy.yml@setup

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ vars.GCP_PROJECT_ID }}/fastapi-service:latest .

      - name: Push Docker image to Google Container Registry
        run: |
          docker push gcr.io/${{ vars.GCP_PROJECT_ID }}/fastapi-service:latest

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy fastapi-service \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/fastapi-service:latest \
            --platform managed \
            --region ${{ vars.GCP_REGION }} \
            --allow-unauthenticated

  docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Use setup job
        uses: ./.github/workflows/deploy.yml@setup
      
      - name: Build Sphinx docs
        run: |
          cd docs
          make html
      
      - name: Deploy docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
